<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hengsu.duobao.core.repository.AddressRepository" >
  <resultMap id="BaseResultMap" type="com.hengsu.duobao.core.entity.Address" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="receive_name" property="receiveName" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="receive_address" property="receiveAddress" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, receive_name, province, city, region, receive_address, phone, is_default
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from address
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hengsu.duobao.core.entity.Address" >
    insert into address (id, user_id, receive_name, 
      province, city, region, 
      receive_address, phone, is_default
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{receiveName,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{receiveAddress,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{isDefault,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hengsu.duobao.core.entity.Address" >
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="receiveName != null" >
        receive_name,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="receiveAddress != null" >
        receive_address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="receiveName != null" >
        #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null" >
        #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengsu.duobao.core.entity.Address" >
    update address
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="receiveName != null" >
        receive_name = #{receiveName,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null" >
        receive_address = #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengsu.duobao.core.entity.Address" >
    update address
    set user_id = #{userId,jdbcType=BIGINT},
      receive_name = #{receiveName,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      receive_address = #{receiveAddress,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="com.hengsu.duobao.core.entity.Address" >
    select count(*) from address
    <where >
      <if test="id != null" >
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="userId != null" >
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="receiveName != null" >
        and receive_name = #{receiveName,jdbcType=VARCHAR}
      </if>
      <if test="province != null" >
        and province = #{province,jdbcType=VARCHAR}
      </if>
      <if test="city != null" >
        and city = #{city,jdbcType=VARCHAR}
      </if>
      <if test="region != null" >
        and region = #{region,jdbcType=VARCHAR}
      </if>
      <if test="receiveAddress != null" >
        and receive_address = #{receiveAddress,jdbcType=VARCHAR}
      </if>
      <if test="phone != null" >
        and phone = #{phone,jdbcType=VARCHAR}
      </if>
      <if test="isDefault != null" >
        and is_default = #{isDefault,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from address where 1 = 1 
    <if test="param1.id != null" >
      and id = #{param1.id,jdbcType=BIGINT}
    </if>
    <if test="param1.userId != null" >
      and user_id = #{param1.userId,jdbcType=BIGINT}
    </if>
    <if test="param1.receiveName != null" >
      and receive_name = #{param1.receiveName,jdbcType=VARCHAR}
    </if>
    <if test="param1.province != null" >
      and province = #{param1.province,jdbcType=VARCHAR}
    </if>
    <if test="param1.city != null" >
      and city = #{param1.city,jdbcType=VARCHAR}
    </if>
    <if test="param1.region != null" >
      and region = #{param1.region,jdbcType=VARCHAR}
    </if>
    <if test="param1.receiveAddress != null" >
      and receive_address = #{param1.receiveAddress,jdbcType=VARCHAR}
    </if>
    <if test="param1.phone != null" >
      and phone = #{param1.phone,jdbcType=VARCHAR}
    </if>
    <if test="param1.isDefault != null" >
      and is_default = #{param1.isDefault,jdbcType=INTEGER}
    </if>
    <if test="param2.sort != null" >
      order by 
      <foreach collection="param2.sort" item="order" separator="," >
        ${order.property} ${order.direction}
      </foreach>
    </if>
    <if test="param2.offset >= 0 and param2.pageSize > 0" >
      limit ${param2.offset}, ${param2.pageSize}
    </if>
  </select>
</mapper>